#include "IGS_SaveData_Career.h"
#include "GameplayTagContainer.h"
#include "EMETA_ArmyTier.h"
#include "EMETA_CareerCompletionReason.h"
#include "EMETA_EventTime.h"
#include "EMETA_Gang.h"
#include "EMETA_Heat.h"
#include "EMETA_RespectLvl.h"
#include "EMETA_TradeVendor.h"
#include "EMETA_UsingCrewInGraph.h"

FIGS_SaveData_Career::FIGS_SaveData_Career() {
    (*this).SaveSlot = TEXT("");
    (*this).bIsFilled = false;
    (*this).CampaignVersion = TEXT("");
    auto& gen2138 = (*this).BlackmarketManagerData.GenericRecruitsPool;
    gen2138.Empty();
    auto& gen2139 = (*this).BlackmarketManagerData.GenericCheapRecruitsPool;
    gen2139.Empty();
    auto& gen2140 = (*this).BlackmarketManagerData.UniqueRecruitsPool;
    gen2140.Empty();
    auto& gen2141 = (*this).BlackmarketManagerData.UnseenUnlockedCharacterTagIDs;
    gen2141.Empty();
    auto& gen2142 = (*this).BlackmarketManagerData.UnseenUnlockedWeaponTagIDs;
    gen2142.Empty();
    auto& gen2143 = (*this).BlackmarketManagerData.UnseenUnlockedEquipmentTagIDs;
    gen2143.Empty();
    (*this).BlackmarketManagerData.GenericPrevID = 0;
    (*this).BlackmarketManagerData.DayWhenHeistersMarketBecameAvailable = 0;
    (*this).BlackmarketManagerData.DayWhenWeaponsMarketBecameAvailable = 0;
    auto& gen2144 = (*this).BlackmarketManagerData.PlotlineAssetsPool;
    gen2144.Empty();
    auto& gen2145 = (*TBaseStructure<FGameplayTagContainer>::Get()->FindPropertyByName("GameplayTags")->ContainerPtrToValuePtr<TArray<FGameplayTag>>(&(*this).BlackmarketManagerData.TemporaryLockedPlotlineAssetsTags, 0));
    gen2145.Empty();
    auto& gen2146 = (*TBaseStructure<FGameplayTagContainer>::Get()->FindPropertyByName("ParentTags")->ContainerPtrToValuePtr<TArray<FGameplayTag>>(&(*this).BlackmarketManagerData.TemporaryLockedPlotlineAssetsTags, 0));
    gen2146.Empty();
    (*this).BlackmarketManagerData.ActiveLootEvent.Vendor = EMETA_TradeVendor::UNDEFINED;
    (*TBaseStructure<FGameplayTag>::Get()->FindPropertyByName("TagName")->ContainerPtrToValuePtr<FName>(&(*this).BlackmarketManagerData.ActiveLootEvent.LootTag, 0)) = NAME_None;
    (*this).BlackmarketManagerData.ActiveLootEvent.MinLootValue = 0;
    (*this).BlackmarketManagerData.ActiveLootEvent.MissionID = nullptr;
    (*this).BlackmarketManagerData.BaseDayForLootEvents = 0;
    (*this).BlackmarketManagerData.WeaponEvent.Cooldown = 0;
    (*this).BlackmarketManagerData.WeaponEvent.MinAvailableCash = 0;
    (*this).BlackmarketManagerData.WeaponEvent.NumberOfWeaponsPerEvent = 1;
    (*this).BlackmarketManagerData.WeaponEvent.ExpirationTime = 0;
    auto& gen2147 = (*this).BlackmarketManagerData.WeaponEvent.WeaponClassesChances;
    gen2147.Empty();
    auto& gen2148 = (*this).BlackmarketManagerData.WeaponEvent.WeaponQualitiesChances;
    gen2148.Empty();
    (*this).BlackmarketManagerData.BaseDayForWeaponEvent = 0;
    (*this).BlackmarketManagerData.EquipmentEvent.Cooldown = 0;
    (*this).BlackmarketManagerData.EquipmentEvent.MinAvailableCash = 0;
    (*this).BlackmarketManagerData.EquipmentEvent.NumberOfEquipmentPerEvent = 1;
    (*this).BlackmarketManagerData.EquipmentEvent.ExpirationTime = 0;
    auto& gen2149 = (*this).BlackmarketManagerData.EquipmentEvent.EquipmentQualitiesChances;
    gen2149.Empty();
    auto& gen2150 = (*this).BlackmarketManagerData.EquipmentEventPool;
    gen2150.Empty();
    (*this).BlackmarketManagerData.BaseDayForEquipmentEvent = 0;
    (*this).BlackmarketManagerData.WeaponsPoolRefreshesCounter = 0;
    (*this).BlackmarketManagerData.WeaponsPoolRefreshesPrice = 0;
    (*this).BlackmarketManagerData.HireArmyEventData.SoldierCostMultiplierForAttack = 0.000000000e+00f;
    (*this).BlackmarketManagerData.HireArmyEventData.SoldierCostMultiplierForAttackNeutral = 0.000000000e+00f;
    (*this).BlackmarketManagerData.HireArmyEventData.SoldierCostMultiplierForDefense = 0.000000000e+00f;
    (*this).BlackmarketManagerData.HireArmyEventData.SoldierUpkeepCost = 0;
    (*this).BlackmarketManagerData.HireArmyEventData.SoldierHireCost = 0;
    (*this).BlackmarketManagerData.HireArmyEventData.SoldierHireCostMultiplierInPercent = 0.000000000e+00f;
    (*this).BlackmarketManagerData.HireArmyEventData.HireArmyEventConfig.SoldierHireAmountPerHireEvent.Min = 0;
    (*this).BlackmarketManagerData.HireArmyEventData.HireArmyEventConfig.SoldierHireAmountPerHireEvent.Max = 0;
    (*this).BlackmarketManagerData.HireArmyEventData.HireArmyEventConfig.ShouldBeClampedByArmyCapacity = false;
    (*this).BlackmarketManagerData.HireArmyEventData.HireArmyEventConfig.ClampedMinimumArmy = 0;
    (*this).BlackmarketManagerData.HireArmyEventData.HireEventDelay.Min = 0;
    (*this).BlackmarketManagerData.HireArmyEventData.HireEventDelay.Max = 0;
    (*this).BlackmarketManagerData.HireArmyEventData.HireEventDurationTime = 0;
    (*this).BlackmarketManagerData.AmountOfGeneratedSoldiers = 0;
    (*this).BlackmarketManagerData.BaseDayForHireArmyEvent = 0;
    (*this).BlackmarketManagerData.AmountOfBoughtCheapHeisters = 0;
    (*this).BlackmarketManagerData.HeistersPoolRefreshesCounter = 0;
    (*this).BlackmarketManagerData.HeistersPoolRefreshPrice = 0;
    auto& gen2151 = (*this).CrewManagerData.GenericCrewHeisters;
    gen2151.Empty();
    auto& gen2152 = (*this).CrewManagerData.UniqueCrewHeisters;
    gen2152.Empty();
    auto& gen2153 = (*this).CrewManagerData.GenericHeistersOnJob;
    gen2153.Empty();
    auto& gen2154 = (*this).CrewManagerData.UniqueHeistersOnJob;
    gen2154.Empty();
    auto& gen2155 = (*this).CrewManagerData.RemovedHeisters;
    gen2155.Empty();
    (*this).CrewManagerData.RemainAmountOfCompletedMissionsBeforeUnlock = 0;
    (*this).DailyManagerData.CurrentDay = 0;
    auto& gen2156 = (*this).StashManagerData.Equipment;
    gen2156.Empty();
    (*this).StashManagerData.PlayerRespect = EMETA_RespectLvl::Low;
    (*this).StashManagerData.Army = 0;
    (*this).StashManagerData.AvailableArmy = 0;
    (*this).StashManagerData.ArmyTier = EMETA_ArmyTier::Low;
    (*this).StashManagerData.CurrentLootValueWasSoldToPawnShop = 0;
    (*this).StashManagerData.LastDayWhenWarehouseAttackStarted = -1;
    (*this).StashManagerData.ChanceWarehouseAttack = 0;
    (*this).StashManagerData.WarehouseAttackMissionID = nullptr;
    (*this).StashManagerData.MoneyForWarehouseAttack = 0;
    auto& gen2157 = (*this).EventManagerData.DefaultGraphValues;
    gen2157.Empty();
    (*this).EventManagerData.EventTime = EMETA_EventTime::DayStart;
    (*this).EventManagerData.bPoolFrozen = false;
    (*this).EventManagerData.bShouldCallEndDay = false;
    (*this).EventManagerData.bEndDayWasCalled = false;
    auto& gen2158 = (*this).GoalManagerData.StoryGoalsSave;
    gen2158.Empty();
    auto& gen2159 = (*this).GoalManagerData.MoneyMakingGoalsSave;
    gen2159.Empty();
    auto& gen2160 = (*this).GoalManagerData.GoalsPools;
    gen2160.Empty();
    auto& gen2161 = (*this).GoalManagerData.BacklogGoalsPools;
    gen2161.Empty();
    auto& gen2162 = (*this).GoalManagerData.FinishedGoals;
    gen2162.Empty();
    auto& gen2163 = (*this).GoalManagerData.GoalsRepeatCounters;
    gen2163.Empty();
    (*this).JobManagerData.CurrentJob = nullptr;
    (*TBaseStructure<FGameplayTag>::Get()->FindPropertyByName("TagName")->ContainerPtrToValuePtr<FName>(&(*this).JobManagerData.CurrentJobTileID, 0)) = NAME_None;
    auto& gen2164 = (*this).JobManagerData.JobsOnMap.MoneyMakingMissions;
    gen2164.Empty();
    auto& gen2165 = (*this).JobManagerData.JobsOnMap.AmbushMissions;
    gen2165.Empty();
    auto& gen2166 = (*this).JobManagerData.JobsOnMap.StoryMissions;
    gen2166.Empty();
    auto& gen2167 = (*this).JobManagerData.JobsOnMap.TradeMissions;
    gen2167.Empty();
    auto& gen2168 = (*this).JobManagerData.JobsOnMap.TradeDealSellMissions;
    gen2168.Empty();
    auto& gen2169 = (*this).JobManagerData.JobsOnMap.CinematicMissions;
    gen2169.Empty();
    auto& gen2170 = (*this).JobManagerData.JobsOnMap.TurfWarMissions;
    gen2170.Empty();
    auto& gen2171 = (*this).JobManagerData.JobsOnMap.OtherMissions;
    gen2171.Empty();
    (*this).JobManagerData.JobsCompletedAmount = 0;
    (*this).JobManagerData.bWasPlayerTransferredToFPSSide = false;
    (*this).JobManagerData.bUsingTemporaryCrewAfterFPS = EMETA_UsingCrewInGraph::TemporaryCrew;
    (*this).RandomEventManagerData.CooldownCounterForFuneralOfGenericHeisters = 0;
    (*this).CityMapManagerData.LastDayOfTilesIncomeRefresh = 0;
    (*this).WarManagerData.AttemptsToCaptureTileCounter = 0;
    auto& gen2172 = (*this).WarManagerData.TodaysLockedTilesForAI;
    gen2172.Empty();
    (*this).WarManagerData.DaysWithMoreAttack = 0;
    (*this).WarManagerData.AILastTileConfigIndex = 0;
    (*this).WarManagerData.bIsAllTileCaptured = false;
    (*this).WarManagerData.bIsAllGangsEradicated = false;
    (*this).FinanceManagerData.Balance = 0;
    (*this).FinanceManagerData.HiredCrewSpending = 0;
    (*this).FinanceManagerData.MarketSpending = 0;
    (*this).FinanceManagerData.DayWhenPlayerReachedBankruptState = 0;
    (*this).FinanceManagerData.CurrentLoan.ActivatedDay = 0;
    (*this).FinanceManagerData.CurrentLoan.BorrowedCash = 0.000000000e+00f;
    (*this).FinanceManagerData.CurrentLoan.DailyRepaymentInPercentsFromBorrowedCash = 0;
    (*this).FinanceManagerData.CurrentLoan.DaysToRepay = 0;
    (*this).FinanceManagerData.CurrentLoan.CooldownToNextOffer = 0;
    (*this).FinanceManagerData.CooldownToNextOffer = 0;
    (*this).FinanceManagerData.MissionIncome = 0;
    (*this).FinanceManagerData.TradeIncome = 0;
    (*this).FinanceManagerData.OtherIncome = 0;
    (*this).FinanceManagerData.OtherSpending = 0;
    (*this).MoneyMakingOpportunitiesData.bStarted = false;
    (*this).MoneyMakingOpportunitiesData.StartDay = 0;
    (*this).MoneyMakingOpportunitiesData.FinishDay = 0;
    (*this).HeatManagerData.DaysLeftForTheHeatRevision = 0;
    (*this).HeatManagerData.HeatState = EMETA_Heat::VeryLow;
    (*this).HeatManagerData.HeatValue = 0.000000000e+00f;
    (*this).HeatManagerData.PoliceInvestigationValue = 0.000000000e+00f;
    (*this).HeatManagerData.SheriffTargetGang = EMETA_Gang::None;
    auto& gen2173 = (*this).HeatManagerData.DetectivesPool;
    gen2173.Empty();
    auto& gen2174 = (*this).HeatManagerData.DeadDetectives;
    gen2174.Empty();
    (*this).BossLevelManagerData.AmountOfPrimaryWeaponsIssued = 0;
    (*this).BossLevelManagerData.AmountOfAdditionalEquipmentIssued = 0;
    (*TBaseStructure<FGameplayTag>::Get()->FindPropertyByName("TagName")->ContainerPtrToValuePtr<FName>(&(*this).PlanningBoardManagerData.ActivePlanningBoardTag, 0)) = NAME_None;
    auto& gen2175 = (*this).Achievements;
    gen2175.Empty();
    (*this).CareerEnd.bIsPending = false;
    (*this).CareerEnd.bRewardsClaimed = false;
    (*this).CareerEnd.Reason = EMETA_CareerCompletionReason::NoTurfTiles;
    (*this).CareerEnd.BossKilledBy = EMETA_Gang::None;
    (*this).SaveDataVersion.JsonVersion = 0;
    (*this).SaveDataVersion.RevisionCreated = TEXT("");
    (*this).SaveDataVersion.RevisionSaved = TEXT("");
    (*this).SaveDataVersion.SnapshotRevision = TEXT("");
    auto& gen2176 = (*this).StartingEntitlementTags;
    gen2176.Empty();
    (*this).MetaPersistentId = TEXT("0");
}

